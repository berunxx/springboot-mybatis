<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.waynezw.mapper.JobMapper">
    <resultMap id="BaseResultMap" type="cn.waynezw.model.Job">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="job_name" property="jobName" jdbcType="VARCHAR"/>
        <result column="job_data" property="jobData" jdbcType="VARCHAR"/>
        <result column="job_type" property="jobType" jdbcType="VARCHAR"/>
        <result column="consumer_time" property="consumerTime" jdbcType="VARCHAR"/>
        <result column="execute_channel" property="executeChannel" jdbcType="VARCHAR"/>
        <result column="job_time" property="jobTime" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <select id="findById" parameterType="long" resultMap="BaseResultMap">
        SELECT * FROM  `job` WHERE id = #{id}
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        SELECT * FROM  `job` order by status asc, job_time desc
    </select>

    <select id="findAliveJobs" resultMap="BaseResultMap">
        SELECT * FROM  `job` where status = 0 order by status asc
    </select>
    <select id="findByName"  resultMap="BaseResultMap">
        SELECT * FROM  `job` WHERE job_name = #{jobName}
    </select>

    <update id="update" parameterType="cn.waynezw.model.Job">
        UPDATE job SET
        job_name=#{jobName},
        job_type=#{jobType},
        job_data=#{jobData},
        job_time=#{jobTime},
        consumer_time=#{consumerTime},
        execute_channel=#{executeChannel},
        status=#{status}
        WHERE id=#{id}
    </update>

    <update id="updateStatusById" parameterType="cn.waynezw.model.Job" >
        UPDATE job SET status=#{status} WHERE id=#{id}
    </update>
    <insert id="save" parameterType="cn.waynezw.model.Job" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO `job`(id, job_name, job_data, status, job_time, job_type)
        VALUES( #{id}, #{jobName}, #{jobData}, #{status}, #{jobTime}, #{jobType})
    </insert>
    <delete id="delete" parameterType="long">
        DELETE FROM job WHERE id =#{id}
    </delete>
</mapper>